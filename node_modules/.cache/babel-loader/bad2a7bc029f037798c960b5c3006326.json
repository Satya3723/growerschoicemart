{"ast":null,"code":"var _jsxFileName = \"F:\\\\testcase3\\\\final1\\\\growerschoicemart\\\\src\\\\pages\\\\AdminPage.js\",\n    _s = $RefreshSig$();\n\n// AdminPage.js\nimport { useEffect, useState } from 'react';\nimport { database } from '../firebase';\nimport './AdminPage.css'; // Import the CSS file\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminPage = () => {\n  _s();\n\n  const [orders, setOrders] = useState([]);\n  const [hoveredOrderId, setHoveredOrderId] = useState(null);\n  const [hoveredOrderDetails, setHoveredOrderDetails] = useState(null);\n  const [counter, setCounter] = useState(1);\n  useEffect(() => {\n    // Fetch orders from Firebase\n    const fetchOrders = async () => {\n      try {\n        const ordersSnapshot = await database.ref('orders').once('value');\n        const ordersData = ordersSnapshot.val();\n        const ordersArray = ordersData ? Object.values(ordersData) : [];\n        setOrders(ordersArray);\n      } catch (error) {\n        console.error('Error fetching orders:', error);\n      }\n    };\n\n    fetchOrders();\n  }, []);\n\n  const handleDeleteOrder = async orderId => {\n    try {\n      // Remove the order from the 'orders' node in the database\n      await database.ref(`orders/${orderId}`).remove(); // Update the state to reflect the deletion\n\n      setOrders(prevOrders => prevOrders.filter(order => order.orderId !== orderId));\n    } catch (error) {\n      console.error('Error deleting order:', error);\n    }\n  };\n\n  const handleOrderHover = async orderId => {\n    try {\n      // Fetch cart items details for the hovered order ID\n      const orderDetailsSnapshot = await database.ref(`orders/${orderId}/cartItems`).once('value');\n      const cartItemsDetails = orderDetailsSnapshot.val(); // Assuming cartItemsDetails is an array, map over it\n\n      const formattedCartItems = cartItemsDetails ? Object.values(cartItemsDetails).map((item, index) => ({\n        index,\n        productName: item.title // Add other properties as needed\n\n      })) : [];\n      console.log('formattedCartItems:', formattedCartItems); // Add this line for debugging\n\n      setHoveredOrderDetails(formattedCartItems);\n    } catch (error) {\n      console.error('Error fetching order details:', error);\n    }\n  };\n\n  const handleMouseEnter = orderId => {\n    setHoveredOrderId(orderId);\n    handleOrderHover(orderId);\n  };\n\n  const handleMouseLeave = () => {\n    setHoveredOrderId(null);\n    setHoveredOrderDetails(null);\n  };\n\n  const handleGenerateOrder = async () => {\n    // Generate a new order with an incrementing number\n    const newOrder = {\n      orderId: counter // ... other order details\n\n    };\n    setCounter(prevCounter => prevCounter + 1); // Push the new order to the 'orders' node in the database\n\n    await database.ref(`orders/${newOrder.orderId}`).set(newOrder); // Fetch updated orders from Firebase\n\n    fetchOrders();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Page - Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateOrder,\n      children: \"Generate Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"admin-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Order ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delivery Charge\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Order Placed At\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            onMouseEnter: () => handleMouseEnter(order.orderId),\n            onMouseLeave: handleMouseLeave,\n            children: order.orderId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.totalPrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.deliveryCharge\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.totalAmount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.orderPlacedAt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"admin-deliver-button\",\n              onClick: () => handleDeleteOrder(order.orderId),\n              children: \"Delivered\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 7\n          }, this)]\n        }, order.orderId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 5\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }, this), hoveredOrderId && hoveredOrderDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tooltip\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Cart Items Details for Order ID: \", hoveredOrderId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.values(hoveredOrderDetails).map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: `${item.productName} (Index: ${item.index})`\n        }, item.index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AdminPage, \"yIlMnmdPqWzRC0HpAOpyrXaUlJA=\");\n\n_c = AdminPage;\nexport default AdminPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"sources":["F:/testcase3/final1/growerschoicemart/src/pages/AdminPage.js"],"names":["useEffect","useState","database","AdminPage","orders","setOrders","hoveredOrderId","setHoveredOrderId","hoveredOrderDetails","setHoveredOrderDetails","counter","setCounter","fetchOrders","ordersSnapshot","ref","once","ordersData","val","ordersArray","Object","values","error","console","handleDeleteOrder","orderId","remove","prevOrders","filter","order","handleOrderHover","orderDetailsSnapshot","cartItemsDetails","formattedCartItems","map","item","index","productName","title","log","handleMouseEnter","handleMouseLeave","handleGenerateOrder","newOrder","prevCounter","set","totalPrice","deliveryCharge","totalAmount","orderPlacedAt"],"mappings":"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","sourcesContent":["// AdminPage.js\r\nimport { useEffect, useState } from 'react';\r\nimport { database } from '../firebase';\r\nimport './AdminPage.css'; // Import the CSS file\r\n\r\nconst AdminPage = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [hoveredOrderId, setHoveredOrderId] = useState(null);\r\n  const [hoveredOrderDetails, setHoveredOrderDetails] = useState(null);\r\n  const [counter, setCounter] = useState(1);\r\n\r\n  useEffect(() => {\r\n    // Fetch orders from Firebase\r\n    const fetchOrders = async () => {\r\n      try {\r\n        const ordersSnapshot = await database.ref('orders').once('value');\r\n        const ordersData = ordersSnapshot.val();\r\n        const ordersArray = ordersData ? Object.values(ordersData) : [];\r\n        setOrders(ordersArray);\r\n      } catch (error) {\r\n        console.error('Error fetching orders:', error);\r\n      }\r\n    };\r\n\r\n    fetchOrders();\r\n  }, []);\r\n\r\n  const handleDeleteOrder = async (orderId) => {\r\n    try {\r\n      // Remove the order from the 'orders' node in the database\r\n      await database.ref(`orders/${orderId}`).remove();\r\n\r\n      // Update the state to reflect the deletion\r\n      setOrders((prevOrders) => prevOrders.filter((order) => order.orderId !== orderId));\r\n    } catch (error) {\r\n      console.error('Error deleting order:', error);\r\n    }\r\n  };\r\n  const handleOrderHover = async (orderId) => {\r\n    try {\r\n      // Fetch cart items details for the hovered order ID\r\n      const orderDetailsSnapshot = await database.ref(`orders/${orderId}/cartItems`).once('value');\r\n      const cartItemsDetails = orderDetailsSnapshot.val();\r\n  \r\n      // Assuming cartItemsDetails is an array, map over it\r\n      const formattedCartItems = cartItemsDetails\r\n        ? Object.values(cartItemsDetails).map((item, index) => ({\r\n            index,\r\n            productName: item.title,\r\n            // Add other properties as needed\r\n          }))\r\n        : [];\r\n  \r\n      console.log('formattedCartItems:', formattedCartItems); // Add this line for debugging\r\n  \r\n      setHoveredOrderDetails(formattedCartItems);\r\n    } catch (error) {\r\n      console.error('Error fetching order details:', error);\r\n    }\r\n  };\r\n  \r\n  \r\n  const handleMouseEnter = (orderId) => {\r\n    setHoveredOrderId(orderId);\r\n    handleOrderHover(orderId);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredOrderId(null);\r\n    setHoveredOrderDetails(null);\r\n  };\r\n\r\n  const handleGenerateOrder = async () => {\r\n    // Generate a new order with an incrementing number\r\n    const newOrder = {\r\n      orderId: counter,\r\n      // ... other order details\r\n    };\r\n    setCounter((prevCounter) => prevCounter + 1);\r\n\r\n    // Push the new order to the 'orders' node in the database\r\n    await database.ref(`orders/${newOrder.orderId}`).set(newOrder);\r\n\r\n    // Fetch updated orders from Firebase\r\n    fetchOrders();\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n    <h2>Admin Page - Orders</h2>\r\n    <button onClick={handleGenerateOrder}>Generate Order</button>\r\n    <table className=\"admin-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Order ID</th>\r\n            <th>Total Price</th>\r\n            <th>Delivery Charge</th>\r\n            <th>Total Amount</th>\r\n            <th>Order Placed At</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n  {orders.map((order) => (\r\n    <tr key={order.orderId}>\r\n      <td\r\n        onMouseEnter={() => handleMouseEnter(order.orderId)}\r\n        onMouseLeave={handleMouseLeave}\r\n      >\r\n        {order.orderId}\r\n      </td>\r\n      <td>{order.totalPrice}</td>\r\n      <td>{order.deliveryCharge}</td>\r\n      <td>{order.totalAmount}</td>\r\n      <td>{order.orderPlacedAt}</td>\r\n      <td>\r\n        <button\r\n          className=\"admin-deliver-button\"\r\n          onClick={() => handleDeleteOrder(order.orderId)}\r\n        >\r\n          Delivered\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  ))}\r\n</tbody>\r\n      </table>\r\n\r\n      {hoveredOrderId && hoveredOrderDetails && (\r\n        <div className=\"tooltip\">\r\n          <h3>Cart Items Details for Order ID: {hoveredOrderId}</h3>\r\n          <ul>\r\n            {Object.values(hoveredOrderDetails).map((item) => (\r\n              <li key={item.index}>{`${item.productName} (Index: ${item.index})`}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default AdminPage;"]},"metadata":{},"sourceType":"module"}
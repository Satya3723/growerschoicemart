{"ast":null,"code":"import { Server, Model, RestSerializer } from \"miragejs\";\nimport { loginHandler, signupHandler } from \"./backend/controllers/AuthController\";\nimport { addItemToCartHandler, getCartItemsHandler, removeItemFromCartHandler, updateCartItemHandler } from \"./backend/controllers/CartController\";\nimport { getAllCategoriesHandler, getCategoryHandler } from \"./backend/controllers/CategoryController\";\nimport { getAllProductsHandler, getProductHandler } from \"./backend/controllers/ProductController\";\nimport { addItemToWishlistHandler, getWishlistItemsHandler, removeItemFromWishlistHandler } from \"./backend/controllers/WishlistController\";\nimport { categories } from \"./backend/db/categories\";\nimport { products } from \"./backend/db/products\";\nimport { users } from \"./backend/db/users\";\nexport function makeServer() {\n  let {\n    environment = \"development\"\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return new Server({\n    serializers: {\n      application: RestSerializer\n    },\n    environment,\n    models: {\n      product: Model,\n      category: Model,\n      user: Model,\n      cart: Model,\n      wishlist: Model\n    },\n\n    // Runs on the start of the server\n    seeds(server) {\n      // disballing console logs from Mirage\n      server.logging = true;\n      console.log(\"Users to be seeded:\", users);\n      products.forEach(item => {\n        server.create(\"product\", { ...item\n        });\n      });\n      users.forEach(item => server.create(\"user\", { ...item,\n        cart: [],\n        wishlist: []\n      }));\n      categories.forEach(item => server.create(\"category\", { ...item\n      }));\n    },\n\n    routes() {\n      this.namespace = \"api\"; // auth routes (public)\n\n      this.post(\"/auth/signup\", signupHandler.bind(this));\n      this.post(\"/auth/login\", loginHandler.bind(this)); // products routes (public)\n\n      this.get(\"/products\", getAllProductsHandler.bind(this));\n      this.get(\"/products/:productId\", getProductHandler.bind(this)); // categories routes (public)\n\n      this.get(\"/categories\", getAllCategoriesHandler.bind(this));\n      this.get(\"/categories/:categoryId\", getCategoryHandler.bind(this)); // cart routes (private)\n\n      this.get(\"/user/cart\", getCartItemsHandler.bind(this));\n      this.post(\"/user/cart\", addItemToCartHandler.bind(this));\n      this.post(\"/user/cart/:productId\", updateCartItemHandler.bind(this));\n      this.delete(\"/user/cart/:productId\", removeItemFromCartHandler.bind(this)); // wishlist routes (private)\n\n      this.get(\"/user/wishlist\", getWishlistItemsHandler.bind(this));\n      this.post(\"/user/wishlist\", addItemToWishlistHandler.bind(this));\n      this.delete(\"/user/wishlist/:productId\", removeItemFromWishlistHandler.bind(this));\n    }\n\n  });\n}","map":{"version":3,"sources":["F:/testcase3/final1/AgroStores-react-dev/src/server.js"],"names":["Server","Model","RestSerializer","loginHandler","signupHandler","addItemToCartHandler","getCartItemsHandler","removeItemFromCartHandler","updateCartItemHandler","getAllCategoriesHandler","getCategoryHandler","getAllProductsHandler","getProductHandler","addItemToWishlistHandler","getWishlistItemsHandler","removeItemFromWishlistHandler","categories","products","users","makeServer","environment","serializers","application","models","product","category","user","cart","wishlist","seeds","server","logging","console","log","forEach","item","create","routes","namespace","post","bind","get","delete"],"mappings":"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","sourcesContent":["import { Server, Model, RestSerializer } from \"miragejs\";\nimport {\n  loginHandler,\n  signupHandler,\n} from \"./backend/controllers/AuthController\";\nimport {\n  addItemToCartHandler,\n  getCartItemsHandler,\n  removeItemFromCartHandler,\n  updateCartItemHandler,\n} from \"./backend/controllers/CartController\";\nimport {\n  getAllCategoriesHandler,\n  getCategoryHandler,\n} from \"./backend/controllers/CategoryController\";\nimport {\n  getAllProductsHandler,\n  getProductHandler,\n} from \"./backend/controllers/ProductController\";\nimport {\n  addItemToWishlistHandler,\n  getWishlistItemsHandler,\n  removeItemFromWishlistHandler,\n} from \"./backend/controllers/WishlistController\";\nimport { categories } from \"./backend/db/categories\";\nimport { products } from \"./backend/db/products\";\nimport { users } from \"./backend/db/users\";\n\nexport function makeServer({ environment = \"development\" } = {}) {\n  return new Server({\n    serializers: {\n      application: RestSerializer,\n    },\n    environment,\n    models: {\n      product: Model,\n      category: Model,\n      user: Model,\n      cart: Model,\n      wishlist: Model,\n    },\n\n    // Runs on the start of the server\n    seeds(server) {\n      // disballing console logs from Mirage\n      server.logging = true;\n      console.log(\"Users to be seeded:\", users);\n      products.forEach((item) => {\n        server.create(\"product\", { ...item });\n      });\n\n      users.forEach((item) =>\n        server.create(\"user\", { ...item, cart: [], wishlist: [] })\n      );\n\n      categories.forEach((item) => server.create(\"category\", { ...item }));\n    },\n\n    routes() {\n      this.namespace = \"api\";\n      // auth routes (public)\n      this.post(\"/auth/signup\", signupHandler.bind(this));\n      this.post(\"/auth/login\", loginHandler.bind(this));\n\n      // products routes (public)\n      this.get(\"/products\", getAllProductsHandler.bind(this));\n      this.get(\"/products/:productId\", getProductHandler.bind(this));\n\n      // categories routes (public)\n      this.get(\"/categories\", getAllCategoriesHandler.bind(this));\n      this.get(\"/categories/:categoryId\", getCategoryHandler.bind(this));\n\n      // cart routes (private)\n      this.get(\"/user/cart\", getCartItemsHandler.bind(this));\n      this.post(\"/user/cart\", addItemToCartHandler.bind(this));\n      this.post(\"/user/cart/:productId\", updateCartItemHandler.bind(this));\n      this.delete(\n        \"/user/cart/:productId\",\n        removeItemFromCartHandler.bind(this)\n      );\n\n      // wishlist routes (private)\n      this.get(\"/user/wishlist\", getWishlistItemsHandler.bind(this));\n      this.post(\"/user/wishlist\", addItemToWishlistHandler.bind(this));\n      this.delete(\n        \"/user/wishlist/:productId\",\n        removeItemFromWishlistHandler.bind(this)\n      );\n    },\n  });\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"F:\\\\testcase3\\\\final1\\\\growerschoicemart\\\\src\\\\pages\\\\AdminPage.js\",\n    _s = $RefreshSig$();\n\n// AdminPage.js\nimport { useEffect, useState } from 'react';\nimport { database } from '../firebase';\nimport './AdminPage.css'; // Import the CSS file\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminPage = () => {\n  _s();\n\n  const [orders, setOrders] = useState([]);\n  useEffect(() => {\n    // Fetch orders from Firebase\n    const fetchOrders = async () => {\n      try {\n        const ordersSnapshot = await database.ref('orders').once('value');\n        const ordersData = ordersSnapshot.val();\n        const ordersArray = ordersData ? Object.values(ordersData) : [];\n        setOrders(ordersArray);\n      } catch (error) {\n        console.error('Error fetching orders:', error);\n      }\n    };\n\n    fetchOrders();\n  }, []);\n\n  const handleDeleteOrder = async orderId => {\n    try {\n      // Remove the order from the 'orders' node in the database\n      await database.ref(`orders/${orderId}`).remove(); // Update the state to reflect the deletion\n\n      setOrders(prevOrders => prevOrders.filter(order => order.orderId !== orderId));\n    } catch (error) {\n      console.error('Error deleting order:', error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Page - Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"admin-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Order ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delivery Charge\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Order Placed At\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.orderId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.totalPrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.deliveryCharge\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.totalAmount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.orderPlacedAt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteOrder(order.orderId),\n              children: \"Delivered\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, order.orderId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AdminPage, \"FvMuVccH6DXI6fqfhJiN/VsjZaw=\");\n\n_c = AdminPage;\nexport default AdminPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"sources":["F:/testcase3/final1/growerschoicemart/src/pages/AdminPage.js"],"names":["useEffect","useState","database","AdminPage","orders","setOrders","fetchOrders","ordersSnapshot","ref","once","ordersData","val","ordersArray","Object","values","error","console","handleDeleteOrder","orderId","remove","prevOrders","filter","order","map","totalPrice","deliveryCharge","totalAmount","orderPlacedAt"],"mappings":"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","sourcesContent":["// AdminPage.js\r\nimport { useEffect, useState } from 'react';\r\nimport { database } from '../firebase';\r\nimport './AdminPage.css'; // Import the CSS file\r\n\r\nconst AdminPage = () => {\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch orders from Firebase\r\n    const fetchOrders = async () => {\r\n      try {\r\n        const ordersSnapshot = await database.ref('orders').once('value');\r\n        const ordersData = ordersSnapshot.val();\r\n        const ordersArray = ordersData ? Object.values(ordersData) : [];\r\n        setOrders(ordersArray);\r\n      } catch (error) {\r\n        console.error('Error fetching orders:', error);\r\n      }\r\n    };\r\n\r\n    fetchOrders();\r\n  }, []);\r\n\r\n  const handleDeleteOrder = async (orderId) => {\r\n    try {\r\n      // Remove the order from the 'orders' node in the database\r\n      await database.ref(`orders/${orderId}`).remove();\r\n\r\n      // Update the state to reflect the deletion\r\n      setOrders((prevOrders) => prevOrders.filter((order) => order.orderId !== orderId));\r\n    } catch (error) {\r\n      console.error('Error deleting order:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Admin Page - Orders</h2>\r\n      <table className=\"admin-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Order ID</th>\r\n            <th>Total Price</th>\r\n            <th>Delivery Charge</th>\r\n            <th>Total Amount</th>\r\n            <th>Order Placed At</th>\r\n            <th>Action</th> {/* New column for delete button */}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {orders.map((order) => (\r\n            <tr key={order.orderId}>\r\n              <td>{order.orderId}</td>\r\n              <td>{order.totalPrice}</td>\r\n              <td>{order.deliveryCharge}</td>\r\n              <td>{order.totalAmount}</td>\r\n              <td>{order.orderPlacedAt}</td>\r\n              <td>\r\n                <button onClick={() => handleDeleteOrder(order.orderId)}>Delivered</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPage;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"F:\\\\testcase3\\\\final1\\\\growerschoicemart\\\\src\\\\pages\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport { Navbar, Footer } from \"../components/allComponents\";\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\nimport \"../styles/pages/login.css\";\nimport { useAuth } from \"../context/auth-context\";\nimport { useState, useRef } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { useCart } from \"../context/cart-context\";\nimport { useWishList } from \"../context/wishlist-context\"; //import { users } from \"../backend/db/users\"; // Import your user data\n\nimport firebase from \"firebase/compat/app\"; // Note the use of 'compat' for compatibility with older versions\n\nimport \"firebase/compat/database\"; // You can also import other Firebase services as needed\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDN5aoiJvcK7K-Pit5aesHJwiQGKnVdv60\",\n  authDomain: \"minor-5f7c5.firebaseapp.com\",\n  databaseURL: \"https://minor-5f7c5-default-rtdb.firebaseio.com\",\n  projectId: \"minor-5f7c5\",\n  storageBucket: \"minor-5f7c5.appspot.com\",\n  messagingSenderId: \"6993427988\",\n  appId: \"1:6993427988:web:7701bf4be3e7c9b585f101\",\n  measurementId: \"G-K2EFB4HXYE\"\n};\nfirebase.initializeApp(firebaseConfig);\nexport const Login = () => {\n  _s();\n\n  var _location$state, _location$state$from;\n\n  const {\n    auth,\n    setAuth\n  } = useAuth();\n  const {\n    dispatchCart\n  } = useCart();\n  const {\n    dispatchWishList\n  } = useWishList();\n  const [passwordType, setPasswordType] = useState(\"password\");\n  const [testData, setTestData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const editLoginForm = useRef(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : (_location$state$from = _location$state.from) === null || _location$state$from === void 0 ? void 0 : _location$state$from.pathname) || \"/\";\n  const database = firebase.database();\n\n  const handleLoginForm = async e => {\n    e.preventDefault();\n    const form = editLoginForm.current;\n    const enteredEmail = form[\"emailId\"].value;\n    const enteredPassword = form[\"passwordField\"].value;\n\n    try {\n      const userCredential = await auth.signInWithEmailAndPassword(enteredEmail, enteredPassword);\n      const user = userCredential.user; // Check if the user's data is present in the Firebase Realtime Database\n\n      const userId = user.uid;\n      const userRef = database.ref(`users/${userId}`);\n      const userSnapshot = await userRef.once(\"value\");\n      const userData = userSnapshot.val();\n\n      if (userData) {\n        // User data is present in the database, allow user to log in and navigate to the home page\n        handleSuccessfulLogin(user);\n      } else {\n        // User data is not present in the database, show an error message\n        console.log(\"User data not found in the database\");\n        handleFailedLogin();\n      }\n    } catch (error) {\n      handleFailedLogin();\n    }\n\n    editLoginForm.current.reset();\n  };\n\n  const handleSuccessfulLogin = user => {\n    // Simulate setting authentication data and updating context\n    localStorage.setItem(\"userData\", JSON.stringify(user));\n    localStorage.setItem(\"token\", \"your_dummy_token\"); // You can generate a token here\n\n    setAuth({ ...auth,\n      token: \"your_dummy_token\",\n      isLoggedIn: true\n    }); // Check if the user's data is present in the Firebase Realtime Database\n\n    const userId = user.uid;\n    const userRef = database.ref(`users/${userId}`);\n    const userSnapshot = userRef.once(\"value\");\n    const userData = userSnapshot.val();\n\n    if (userData) {\n      // User data is present in the database, navigate to the home page\n      dispatchCart({\n        type: \"UPDATE-CART\",\n        payload: userData.cart || []\n      });\n      dispatchWishList({\n        type: \"UPDATE-WISHLIST\",\n        payload: userData.wishlist || []\n      });\n      setTestData({\n        email: \"\",\n        password: \"\"\n      });\n      toast.success(\"Login Success\");\n      navigate(\"/home\", {\n        replace: true\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      ref: editLoginForm,\n      onSubmit: handleLoginForm,\n      className: \"login-container  flex-column-center pd-y-md\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center mg-xsm\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"email-id-item mg-xsm flex-column fw-bold\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email-id\",\n            className: \"mg-bottom-xsm\",\n            children: [\"Email address \", /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            pattern: \"^([a-zA-Z0-9_\\\\-\\\\.]+)@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.)|(([a-zA-Z0-9\\\\-]+\\\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\\\]?)$\",\n            id: \"email-id\",\n            name: \"emailId\",\n            className: \"mg-bottom-xsm\",\n            defaultValue: testData.email,\n            placeholder: \"xyz@gmail.com\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"password-item mg-xsm flex-column fw-bold\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: \"mg-bottom-xsm\",\n            children: [\"Password \", /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: passwordType,\n            id: \"password\",\n            name: \"passwordField\",\n            defaultValue: testData.password,\n            className: \"mg-bottom-xsm\",\n            minLength: \"8\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"material-icons login-pwd-show-icon\",\n            onClick: () => setPasswordType(passwordType => passwordType === \"password\" ? \"text\" : \"password\"),\n            children: passwordType === \"password\" ? \"visibility_off\" : \"visibility\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/forgotpassword\",\n            className: \"forgot-password\",\n            children: \"Forgot Password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"remember-item mg-xsm fw-bold align-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"mg-xsm\",\n            id: \"remember\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"terms\",\n            children: \"Remember Me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          href: \"\",\n          className: \"btn btn-solid fw-bold\",\n          children: \"LOGIN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn-outline btn fw-bold  \",\n          onClick: () => setTestData({\n            email: \"test@gmail.com\",\n            password: \"test@123\"\n          }),\n          children: \"Login with Test Credentials\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          className: \"btn btn-outline-icon fw-bold\",\n          children: [\"Create New Account\", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"material-icons\",\n            children: \"chevron_right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"6nvupZjVAv2yn0I7P37Jelb59AU=\", false, function () {\n  return [useAuth, useCart, useWishList, useNavigate, useLocation];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["F:/testcase3/final1/growerschoicemart/src/pages/Login.js"],"names":["Navbar","Footer","Link","useNavigate","useLocation","useAuth","useState","useRef","toast","useCart","useWishList","firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","Login","auth","setAuth","dispatchCart","dispatchWishList","passwordType","setPasswordType","testData","setTestData","email","password","editLoginForm","navigate","location","from","state","pathname","database","handleLoginForm","e","preventDefault","form","current","enteredEmail","value","enteredPassword","userCredential","signInWithEmailAndPassword","user","userId","uid","userRef","ref","userSnapshot","once","userData","val","handleSuccessfulLogin","console","log","handleFailedLogin","error","reset","localStorage","setItem","JSON","stringify","token","isLoggedIn","type","payload","cart","wishlist","success","replace","color"],"mappings":"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","sourcesContent":["import { Navbar, Footer } from \"../components/allComponents\";\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\nimport \"../styles/pages/login.css\";\nimport { useAuth } from \"../context/auth-context\";\nimport { useState, useRef } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { useCart } from \"../context/cart-context\";\nimport { useWishList } from \"../context/wishlist-context\";\n//import { users } from \"../backend/db/users\"; // Import your user data\nimport firebase from \"firebase/compat/app\"; // Note the use of 'compat' for compatibility with older versions\nimport \"firebase/compat/database\"; // You can also import other Firebase services as needed\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDN5aoiJvcK7K-Pit5aesHJwiQGKnVdv60\",\n  authDomain: \"minor-5f7c5.firebaseapp.com\",\n  databaseURL: \"https://minor-5f7c5-default-rtdb.firebaseio.com\",\n  projectId: \"minor-5f7c5\",\n  storageBucket: \"minor-5f7c5.appspot.com\",\n  messagingSenderId: \"6993427988\",\n  appId: \"1:6993427988:web:7701bf4be3e7c9b585f101\",\n  measurementId: \"G-K2EFB4HXYE\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const Login = () => {\n  const { auth, setAuth } = useAuth();\n  const { dispatchCart } = useCart();\n  const { dispatchWishList } = useWishList();\n  const [passwordType, setPasswordType] = useState(\"password\");\n  const [testData, setTestData] = useState({ email: \"\", password: \"\" });\n  const editLoginForm = useRef(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = location.state?.from?.pathname || \"/\";\n  const database = firebase.database();\n\n\n  const handleLoginForm = async (e) => {\n    e.preventDefault();\n    const form = editLoginForm.current;\n    const enteredEmail = form[\"emailId\"].value;\n    const enteredPassword = form[\"passwordField\"].value;\n  \n    try {\n      const userCredential = await auth.signInWithEmailAndPassword(\n        enteredEmail,\n        enteredPassword\n      );\n      const user = userCredential.user;\n  \n      // Check if the user's data is present in the Firebase Realtime Database\n      const userId = user.uid;\n      const userRef = database.ref(`users/${userId}`);\n      const userSnapshot = await userRef.once(\"value\");\n      const userData = userSnapshot.val();\n  \n      if (userData) {\n        // User data is present in the database, allow user to log in and navigate to the home page\n        handleSuccessfulLogin(user);\n      } else {\n        // User data is not present in the database, show an error message\n        console.log(\"User data not found in the database\");\n        handleFailedLogin();\n      }\n    } catch (error) {\n      handleFailedLogin();\n    }\n  \n    editLoginForm.current.reset();\n  };\n  const handleSuccessfulLogin = (user) => {\n    // Simulate setting authentication data and updating context\n    localStorage.setItem(\"userData\", JSON.stringify(user));\n    localStorage.setItem(\"token\", \"your_dummy_token\"); // You can generate a token here\n    setAuth({\n      ...auth,\n      token: \"your_dummy_token\",\n      isLoggedIn: true,\n    });\n  \n    // Check if the user's data is present in the Firebase Realtime Database\n    const userId = user.uid;\n    const userRef = database.ref(`users/${userId}`);\n    const userSnapshot = userRef.once(\"value\");\n    const userData = userSnapshot.val();\n  \n    if (userData) {\n      // User data is present in the database, navigate to the home page\n      dispatchCart({ type: \"UPDATE-CART\", payload: userData.cart || [] });\n      dispatchWishList({ type: \"UPDATE-WISHLIST\", payload: userData.wishlist || [] });\n  \n      setTestData({ email: \"\", password: \"\" });\n      toast.success(\"Login Success\");\n  \n      navigate(\"/home\", { replace: true });\n    }\n  };\n\n  return (\n    <>\n      <Navbar />\n      {/* Main Container */}\n      <form\n        ref={editLoginForm}\n        onSubmit={handleLoginForm}\n        className=\"login-container  flex-column-center pd-y-md\"\n      >\n        <div className=\"login-card\">\n          {/* Heading */}\n          <h2 className=\"text-center mg-xsm\">Login</h2>\n          {/* Email-id */}\n          <div className=\"email-id-item mg-xsm flex-column fw-bold\">\n            <label htmlFor=\"email-id\" className=\"mg-bottom-xsm\">\n              Email address <span style={{ color: \"red\" }}>*</span>\n            </label>\n            <input\n              type=\"email\"\n              pattern=\"^([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$\"\n              id=\"email-id\"\n              name=\"emailId\"\n              className=\"mg-bottom-xsm\"\n              defaultValue={testData.email}\n              placeholder=\"xyz@gmail.com\"\n              required\n            />\n          </div>\n          {/* Password */}\n          <div className=\"password-item mg-xsm flex-column fw-bold\">\n            <label htmlFor=\"password\" className=\"mg-bottom-xsm\">\n              Password <span style={{ color: \"red\" }}>*</span>\n            </label>\n            <input\n              type={passwordType}\n              id=\"password\"\n              name=\"passwordField\"\n              defaultValue={testData.password}\n              className=\"mg-bottom-xsm\"\n              minLength=\"8\"\n              required\n            />\n            <i\n              className=\"material-icons login-pwd-show-icon\"\n              onClick={() =>\n                setPasswordType((passwordType) =>\n                  passwordType === \"password\" ? \"text\" : \"password\"\n                )\n              }\n            >\n              {passwordType === \"password\" ? \"visibility_off\" : \"visibility\"}\n            </i>\n            <Link to=\"/forgotpassword\" className=\"forgot-password\">\n              Forgot Password?\n            </Link>\n          </div>\n          {/*  Remember Me  */}\n          <div className=\"remember-item mg-xsm fw-bold align-center\">\n            <input type=\"checkbox\" className=\"mg-xsm\" id=\"remember\" />\n            <label htmlFor=\"terms\">Remember Me</label>\n          </div>\n          {/* Buttons */}\n          <button href=\"\" className=\"btn btn-solid fw-bold\">\n            LOGIN\n          </button>\n          <button\n            type=\"submit\"\n            className=\"btn-outline btn fw-bold  \"\n            onClick={() =>\n              setTestData({\n                email: \"test@gmail.com\",\n                password: \"test@123\",\n              })\n            }\n          >\n            Login with Test Credentials\n          </button>\n          <Link to=\"/signup\" className=\"btn btn-outline-icon fw-bold\">\n            Create New Account<i className=\"material-icons\">chevron_right</i>\n          </Link>\n        </div>\n      </form>\n      <Footer />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { v4 as uuid } from \"uuid\";\nconst defaultAddress = {\n  id: uuid(),\n  name: \"Venkata Ganesh\",\n  flatName: \"\",\n  area: \"Area 1\",\n  landmark: \"Near Maharaj Bhavan\",\n  city: \"Mumbai\",\n  pincode: \"4000072\",\n  state: \"Maharashtra\",\n  country: \"India\",\n  contact: \"9898989898\"\n};\nexport const addressInitialState = {\n  addressList: [defaultAddress],\n  setEditBox: \"hide-edit-box\",\n  isEditing: false,\n  editData: null,\n  addressSelectedId: null\n};\nexport const addressReducer = (state, _ref) => {\n  let {\n    type,\n    payload\n  } = _ref;\n\n  switch (type) {\n    case \"ADD-NEW-ADDRESS\":\n      return { ...state,\n        setEditBox: \"hide-edit-box\",\n        addressList: [...state.addressList, payload]\n      };\n\n    case \"DELETE-ADDRESS\":\n      return { ...state,\n        addressList: state.addressList.filter(address => address.id != payload)\n      };\n\n    case \"TOGGLE-ADDRESS-MODAL\":\n      return { ...state,\n        setEditBox: payload\n      };\n\n    case \"OPEN-EDIT-ADDRESS\":\n      return { ...state,\n        isEditing: true,\n        setEditBox: \"show-edit-box\",\n        editData: payload,\n        addressList: updateAddress(state, payload)\n      };\n\n    case \"UPDATE-EDIT-ADDRESS\":\n      return { ...state,\n        isEditing: false,\n        setEditBox: \"hide-edit-box\",\n        addressList: updateAddress(state, payload)\n      };\n\n    case \"SET-EDIT-STATUS\":\n      return { ...state,\n        isEditing: payload\n      };\n\n    case \"SET-ADDRESS-ID\":\n      return { ...state,\n        addressSelectedId: payload\n      };\n\n    case \"CLEAR-ADDRESS\":\n      return addressInitialState;\n\n    default:\n      state;\n  }\n};\n\nfunction updateAddress(state, payload) {\n  let indexOfAddress = state.addressList.findIndex(address => address.id == payload.id);\n  state.addressList[indexOfAddress] = payload;\n  return state.addressList;\n}","map":{"version":3,"sources":["F:/testcase3/final1/growerschoicemart/src/reducers/addressReducer.js"],"names":["v4","uuid","defaultAddress","id","name","flatName","area","landmark","city","pincode","state","country","contact","addressInitialState","addressList","setEditBox","isEditing","editData","addressSelectedId","addressReducer","type","payload","filter","address","updateAddress","indexOfAddress","findIndex"],"mappings":"AAAA,SAASA,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,EAAE,EAAEF,IAAI,EADa;AAErBG,EAAAA,IAAI,EAAE,gBAFe;AAGrBC,EAAAA,QAAQ,EAAE,EAHW;AAIrBC,EAAAA,IAAI,EAAE,QAJe;AAKrBC,EAAAA,QAAQ,EAAE,qBALW;AAMrBC,EAAAA,IAAI,EAAE,QANe;AAOrBC,EAAAA,OAAO,EAAE,SAPY;AAQrBC,EAAAA,KAAK,EAAE,aARc;AASrBC,EAAAA,OAAO,EAAE,OATY;AAUrBC,EAAAA,OAAO,EAAE;AAVY,CAAvB;AAaA,OAAO,MAAMC,mBAAmB,GAAG;AACjCC,EAAAA,WAAW,EAAE,CAACZ,cAAD,CADoB;AAEjCa,EAAAA,UAAU,EAAE,eAFqB;AAGjCC,EAAAA,SAAS,EAAE,KAHsB;AAIjCC,EAAAA,QAAQ,EAAE,IAJuB;AAKjCC,EAAAA,iBAAiB,EAAE;AALc,CAA5B;AAQP,OAAO,MAAMC,cAAc,GAAG,CAACT,KAAD,WAA8B;AAAA,MAAtB;AAAEU,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAsB;;AAC1D,UAAQD,IAAR;AACE,SAAK,iBAAL;AACE,aAAO,EACL,GAAGV,KADE;AAELK,QAAAA,UAAU,EAAE,eAFP;AAGLD,QAAAA,WAAW,EAAE,CAAC,GAAGJ,KAAK,CAACI,WAAV,EAAuBO,OAAvB;AAHR,OAAP;;AAKF,SAAK,gBAAL;AACE,aAAO,EACL,GAAGX,KADE;AAELI,QAAAA,WAAW,EAAEJ,KAAK,CAACI,WAAN,CAAkBQ,MAAlB,CACVC,OAAD,IAAaA,OAAO,CAACpB,EAAR,IAAckB,OADhB;AAFR,OAAP;;AAMF,SAAK,sBAAL;AACE,aAAO,EACL,GAAGX,KADE;AAELK,QAAAA,UAAU,EAAEM;AAFP,OAAP;;AAIF,SAAK,mBAAL;AACE,aAAO,EACL,GAAGX,KADE;AAELM,QAAAA,SAAS,EAAE,IAFN;AAGLD,QAAAA,UAAU,EAAE,eAHP;AAILE,QAAAA,QAAQ,EAAEI,OAJL;AAKLP,QAAAA,WAAW,EAAEU,aAAa,CAACd,KAAD,EAAQW,OAAR;AALrB,OAAP;;AAOF,SAAK,qBAAL;AACE,aAAO,EACL,GAAGX,KADE;AAELM,QAAAA,SAAS,EAAE,KAFN;AAGLD,QAAAA,UAAU,EAAE,eAHP;AAILD,QAAAA,WAAW,EAAEU,aAAa,CAACd,KAAD,EAAQW,OAAR;AAJrB,OAAP;;AAMF,SAAK,iBAAL;AACE,aAAO,EACL,GAAGX,KADE;AAELM,QAAAA,SAAS,EAAEK;AAFN,OAAP;;AAIF,SAAK,gBAAL;AACE,aAAO,EACL,GAAGX,KADE;AAELQ,QAAAA,iBAAiB,EAAEG;AAFd,OAAP;;AAIF,SAAK,eAAL;AACE,aAAOR,mBAAP;;AAEF;AACEH,MAAAA,KAAK;AAhDT;AAkDD,CAnDM;;AAqDP,SAASc,aAAT,CAAuBd,KAAvB,EAA8BW,OAA9B,EAAuC;AACrC,MAAII,cAAc,GAAGf,KAAK,CAACI,WAAN,CAAkBY,SAAlB,CAClBH,OAAD,IAAaA,OAAO,CAACpB,EAAR,IAAckB,OAAO,CAAClB,EADhB,CAArB;AAGAO,EAAAA,KAAK,CAACI,WAAN,CAAkBW,cAAlB,IAAoCJ,OAApC;AACA,SAAOX,KAAK,CAACI,WAAb;AACD","sourcesContent":["import { v4 as uuid } from \"uuid\";\n\nconst defaultAddress = {\n  id: uuid(),\n  name: \"Venkata Ganesh\",\n  flatName: \"\",\n  area: \"Area 1\",\n  landmark: \"Near Maharaj Bhavan\",\n  city: \"Mumbai\",\n  pincode: \"4000072\",\n  state: \"Maharashtra\",\n  country: \"India\",\n  contact: \"9898989898\",\n};\n\nexport const addressInitialState = {\n  addressList: [defaultAddress],\n  setEditBox: \"hide-edit-box\",\n  isEditing: false,\n  editData: null,\n  addressSelectedId: null,\n};\n\nexport const addressReducer = (state, { type, payload }) => {\n  switch (type) {\n    case \"ADD-NEW-ADDRESS\":\n      return {\n        ...state,\n        setEditBox: \"hide-edit-box\",\n        addressList: [...state.addressList, payload],\n      };\n    case \"DELETE-ADDRESS\":\n      return {\n        ...state,\n        addressList: state.addressList.filter(\n          (address) => address.id != payload\n        ),\n      };\n    case \"TOGGLE-ADDRESS-MODAL\":\n      return {\n        ...state,\n        setEditBox: payload,\n      };\n    case \"OPEN-EDIT-ADDRESS\":\n      return {\n        ...state,\n        isEditing: true,\n        setEditBox: \"show-edit-box\",\n        editData: payload,\n        addressList: updateAddress(state, payload),\n      };\n    case \"UPDATE-EDIT-ADDRESS\":\n      return {\n        ...state,\n        isEditing: false,\n        setEditBox: \"hide-edit-box\",\n        addressList: updateAddress(state, payload),\n      };\n    case \"SET-EDIT-STATUS\":\n      return {\n        ...state,\n        isEditing: payload,\n      };\n    case \"SET-ADDRESS-ID\":\n      return {\n        ...state,\n        addressSelectedId: payload,\n      };\n    case \"CLEAR-ADDRESS\":\n      return addressInitialState;\n\n    default:\n      state;\n  }\n};\n\nfunction updateAddress(state, payload) {\n  let indexOfAddress = state.addressList.findIndex(\n    (address) => address.id == payload.id\n  );\n  state.addressList[indexOfAddress] = payload;\n  return state.addressList;\n}\n"]},"metadata":{},"sourceType":"module"}
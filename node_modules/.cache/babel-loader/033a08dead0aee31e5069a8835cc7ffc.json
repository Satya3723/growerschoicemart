{"ast":null,"code":"var _jsxFileName = \"F:\\\\testcase3\\\\final1\\\\AgroStores-react-dev\\\\src\\\\components\\\\CartPriceCard.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { useCart } from \"../context/cart-context\";\nimport { useAddress } from \"../context/address-context\";\nimport { clearCart } from \"../services/cartServices\";\nimport { useAuth } from \"../context/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CartPriceCard = () => {\n  _s();\n\n  const {\n    cartState,\n    dispatchCart\n  } = useCart();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    addressState\n  } = useAddress();\n  const {\n    auth\n  } = useAuth();\n\n  const totalPrice = () => {\n    return cartState.cartItems.reduce((total, item) => total + item.price * item.quantity, 0);\n  };\n\n  const totalOldPrice = () => {\n    return cartState.cartItems.reduce((total, item) => total + item.price_old * item.quantity, 0);\n  };\n\n  const deliveryCharge = () => totalPrice() > 499 ? 0 : 100;\n\n  const handlePayment = () => {\n    if (addressState.addressList.length > 0 && addressState.addressSelectedId) {\n      // Your existing logic for clearing the cart and displaying success message\n      clearCart({\n        auth,\n        dispatchCart\n      });\n      toast.success(\"Order placed successfully!\");\n      navigate(\"/order-success-card\");\n    } else {\n      const errorMessage = addressState.addressList.length === 0 ? \"Please Add address\" : \"Please Select Delivery Address\";\n      toast.error(errorMessage);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"price-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"fw-bold mg-xsm\",\n        children: \"Price Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), location.O === \"/cart\" ? /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/checkout\",\n        className: \"btn btn-solid fw-bold btn-place-order align-center\",\n        children: \"PROCEED TO CHECKOUT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-solid fw-bold btn-place-order align-center btn-payment\",\n        onClick: handlePayment,\n        children: \"PROCEED TO PAYMENT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(CartPriceCard, \"lFwTIOES0Hzno5kAc/8LwGjh9M8=\", false, function () {\n  return [useCart, useLocation, useNavigate, useAddress, useAuth];\n});\n\n_c = CartPriceCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartPriceCard\");","map":{"version":3,"sources":["F:/testcase3/final1/AgroStores-react-dev/src/components/CartPriceCard.js"],"names":["React","Link","useLocation","useNavigate","toast","useCart","useAddress","clearCart","useAuth","CartPriceCard","cartState","dispatchCart","location","navigate","addressState","auth","totalPrice","cartItems","reduce","total","item","price","quantity","totalOldPrice","price_old","deliveryCharge","handlePayment","addressList","length","addressSelectedId","success","errorMessage","error","O"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,WAA5B,QAA+C,kBAA/C;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,SAASC,UAAT,QAA2B,4BAA3B;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,SAASC,OAAT,QAAwB,yBAAxB;;;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACjC,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA8BN,OAAO,EAA3C;AACA,QAAMO,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAMW,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAmBR,UAAU,EAAnC;AACA,QAAM;AAAES,IAAAA;AAAF,MAAWP,OAAO,EAAxB;;AAEA,QAAMQ,UAAU,GAAG,MAAM;AACvB,WAAON,SAAS,CAACO,SAAV,CAAoBC,MAApB,CACL,CAACC,KAAD,EAAQC,IAAR,KAAiBD,KAAK,GAAGC,IAAI,CAACC,KAAL,GAAaD,IAAI,CAACE,QADtC,EAEL,CAFK,CAAP;AAID,GALD;;AAOA,QAAMC,aAAa,GAAG,MAAM;AAC1B,WAAOb,SAAS,CAACO,SAAV,CAAoBC,MAApB,CACL,CAACC,KAAD,EAAQC,IAAR,KAAiBD,KAAK,GAAGC,IAAI,CAACI,SAAL,GAAiBJ,IAAI,CAACE,QAD1C,EAEL,CAFK,CAAP;AAID,GALD;;AAOA,QAAMG,cAAc,GAAG,MAAOT,UAAU,KAAK,GAAf,GAAqB,CAArB,GAAyB,GAAvD;;AAEA,QAAMU,aAAa,GAAG,MAAM;AAC1B,QAAIZ,YAAY,CAACa,WAAb,CAAyBC,MAAzB,GAAkC,CAAlC,IAAuCd,YAAY,CAACe,iBAAxD,EAA2E;AACzE;AACAtB,MAAAA,SAAS,CAAC;AAAEQ,QAAAA,IAAF;AAAQJ,QAAAA;AAAR,OAAD,CAAT;AACAP,MAAAA,KAAK,CAAC0B,OAAN,CAAc,4BAAd;AACAjB,MAAAA,QAAQ,CAAC,qBAAD,CAAR;AACD,KALD,MAKO;AACL,YAAMkB,YAAY,GAChBjB,YAAY,CAACa,WAAb,CAAyBC,MAAzB,KAAoC,CAApC,GACI,oBADJ,GAEI,gCAHN;AAIAxB,MAAAA,KAAK,CAAC4B,KAAN,CAAYD,YAAZ;AACD;AACF,GAbD;;AAeA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF,eAIE;AAAA;AAAA;AAAA;AAAA,cAJF,EAMGnB,QAAQ,CAACqB,CAAT,KAAe,OAAf,gBACC,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,WAAT;AAAqB,QAAA,SAAS,EAAC,oDAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,gBAKC;AACE,QAAA,SAAS,EAAC,gEADZ;AAEE,QAAA,OAAO,EAAEP,aAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAuBD,CA7DM;;GAAMjB,a;UACyBJ,O,EACnBH,W,EACAC,W,EACQG,U,EACRE,O;;;KALNC,a","sourcesContent":["import React from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { useCart } from \"../context/cart-context\";\nimport { useAddress } from \"../context/address-context\";\nimport { clearCart } from \"../services/cartServices\";\nimport { useAuth } from \"../context/auth-context\";\n\nexport const CartPriceCard = () => {\n  const { cartState, dispatchCart } = useCart();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { addressState } = useAddress();\n  const { auth } = useAuth();\n\n  const totalPrice = () => {\n    return cartState.cartItems.reduce(\n      (total, item) => total + item.price * item.quantity,\n      0\n    );\n  };\n\n  const totalOldPrice = () => {\n    return cartState.cartItems.reduce(\n      (total, item) => total + item.price_old * item.quantity,\n      0\n    );\n  };\n\n  const deliveryCharge = () => (totalPrice() > 499 ? 0 : 100);\n\n  const handlePayment = () => {\n    if (addressState.addressList.length > 0 && addressState.addressSelectedId) {\n      // Your existing logic for clearing the cart and displaying success message\n      clearCart({ auth, dispatchCart });\n      toast.success(\"Order placed successfully!\");\n      navigate(\"/order-success-card\");\n    } else {\n      const errorMessage =\n        addressState.addressList.length === 0\n          ? \"Please Add address\"\n          : \"Please Select Delivery Address\";\n      toast.error(errorMessage);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"price-summary\">\n        <h3 className=\"fw-bold mg-xsm\">Price Details</h3>\n        <hr />\n        {/* Your existing JSX for displaying price details */}\n        <hr />\n\n        {location.O === \"/cart\" ? (\n          <Link to=\"/checkout\" className=\"btn btn-solid fw-bold btn-place-order align-center\">\n            PROCEED TO CHECKOUT\n          </Link>\n        ) : (\n          <button\n            className=\"btn btn-solid fw-bold btn-place-order align-center btn-payment\"\n            onClick={handlePayment}\n          >\n            PROCEED TO PAYMENT\n          </button>\n        )}\n      </div>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}
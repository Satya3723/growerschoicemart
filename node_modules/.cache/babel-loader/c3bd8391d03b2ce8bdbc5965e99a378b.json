{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nexport const GetProducts = () => {\n  _s();\n\n  const [loader, setLoader] = useState(true);\n  const [products, setProducts] = useState([{}]);\n  useEffect(() => {\n    (async function prodLoader() {\n      try {\n        const response = await axios.get(\"/api/products\");\n        const getProducts = response.data.products;\n        setLoader(false);\n        setProducts(getProducts);\n      } catch (error) {\n        console.error(error);\n      }\n    })(); //IIFE - Immediately Invoked Function\n\n  }, []);\n  return {\n    loader,\n    products\n  };\n};\n\n_s(GetProducts, \"kZmD2cpI0EwK5AQFUS2U5OLRg2M=\");\n\n_c = GetProducts;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetProducts\");","map":{"version":3,"sources":["F:/testcase3/final1/growerschoicemart/src/services/getProducts.js"],"names":["axios","useState","useEffect","GetProducts","loader","setLoader","products","setProducts","prodLoader","response","get","getProducts","data","error","console"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAiBC,SAAjB,QAAiC,OAAjC;AAGA,OAAO,MAAMC,WAAW,GAAG,MAAI;AAAA;;AAC7B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,IAAD,CAApC;AACF,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAxC;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,eAAeM,UAAf,GAA4B;AAC3B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAU,eAAV,CAAvB;AACA,cAAMC,WAAW,GAAGF,QAAQ,CAACG,IAAT,CAAcN,QAAlC;AACAD,QAAAA,SAAS,CAAC,KAAD,CAAT;AACAE,QAAAA,WAAW,CAACI,WAAD,CAAX;AACD,OALD,CAKE,OAAOE,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF,KATD,IADc,CAUR;;AACP,GAXQ,EAWN,EAXM,CAAT;AAYE,SAAO;AAACT,IAAAA,MAAD;AAAQE,IAAAA;AAAR,GAAP;AACD,CAlBM;;GAAMH,W;;KAAAA,W","sourcesContent":["import axios from \"axios\";\nimport {useState,useEffect} from \"react\";\n\n\nexport const GetProducts = ()=>{\n  const [loader, setLoader] = useState(true);\nconst [products, setProducts] = useState([{}]);\n\n\nuseEffect(() => {\n  (async function prodLoader() {\n    try {\n      const response = await axios.get(\"/api/products\");\n      const getProducts = response.data.products;\n      setLoader(false);\n      setProducts(getProducts);\n    } catch (error) {\n      console.error(error);\n    }\n  })(); //IIFE - Immediately Invoked Function\n}, []);\n  return {loader,products};\n}\n"]},"metadata":{},"sourceType":"module"}